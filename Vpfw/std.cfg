# Beispielkonfiguration für das ViciousPlanet Framework
#
# Kommentare werden in dieser Konfigurationsdatei mit der Raute eingeleitet,
# die Zeile wird ab dieser Raute komplett als Kommentar behandelt.
#
# Die Namen der Konfigurationsparameter dürfen keine Leerzeichen oder
# Tabs enthalten, sie können jedoch durch einen Punkt weiter unterteilt
# werden.
# Bsp.: foo.hello = "aloha bar"
# Durch die Unterteilung erreicht man, dass PHP-intern ein Array erstellt wird.
#
# Sobald ein Konfigurationswert Leerzeichen oder Tabs enthält, ist er mit
# Anführungszeichen zu umschließen, andernfalls nicht.
#
# -- Konfiguration des Loggers
# Man kann den Logger so konfigurieren, dass er seine Meldungen wahlweise in
# eine Datei schreibt oder sie an eine Datenbank übergibt. Als
# Datenbanksysteme stehen MySQL, PostgreSQL und SQLite zur Auswahl.
#
# Festlegen der Loggruppen, welche bestimmen welche Nachrichten geloggt
# werden sollen. Soll nichts geloggt werden muss man als Wert "" nehmen.
# Wenn alles geloggt werden soll muss nimmt man all als Wert.
#
Log.Groups = all
#------------------------------------------------------------------------------
# Festlegen des Logtyps
# Möglichkeiten sind file, mysql, postgresql, sqlite
#
Log.Type = file
#------------------------------------------------------------------------------
#
# Beispielkonfiguration und gleichzeitig Standardwerte für die Verwendung
# mit einer Datei:
#
# Name der Logdatei
#
Log.File.Name = vpfw.log
# -----------------------------------------------------------------------------
# Format mit der die Lognachrichten in die Datei geschrieben werden.
# Platzhalter für die Zeitformatierung sind unter der folgenden URL finden:
# http://de2.php.net/manual/en/function.strftime.php
# Applikationsinterne Platzhalter sind $logGroup und $message
#
Log.File.Format = "[%Y-%m-%d/%H:%M:%S] $logGroup | $message"
# -----------------------------------------------------------------------------
# Bestimmt ob für jeden Logeintrag die Datei wieder explizit geschlossen
# werden soll oder nicht, da in PHP das Schreiben in eine Datei gecached wird
# und die Datei erst beim Schließen wirklich beschrieben wird kann man durch
# das Setzen dieses Parameters auf true einen minimalen Performancegewinn
# verzeichnen.
#
Log.File.Cached = true
#
# Beispielkonfiguration für die Verwendung mit einer MySQL-Datenbank:
#
# Zugriffsdaten für die MySQL-Datenbank
#
# Log.MySQL.AccessData = "hostname[:port];username;password;dbname"
# Log.MySQL.TableName = vpfw_log
#------------------------------------------------------------------------------
# Bestimmt ob für jeden Logeintrag ein SQL-Query abgeschickt werden soll oder
# die Logeinträge gesammelt werden und dann am Ende der Skriptausführung
# in einem Query an den SQL-Server geschickt werden.
#
# Log.MySQL.Cached = true
Log.MySQL.AccessData = "127.0.0.1;root;loladin;vp"
Log.MySQL.TableName = log
#
# -- Konfiguration der MySQL-Datenbank
MySQL.AccessData = "127.0.0.1;root;loladin;vp"
MySQL.LogQueries = true
